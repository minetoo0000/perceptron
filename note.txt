[ 개편 요구 사항 ]
현재 XOR 문제를 해결하지 못하는 문제가 있다. 한참 이전에 이미 XOR 문제를 해결할 수 있는 학습 알고리즘 및 데이터 구조를 찾아내었기 때문에
문제가 없을 거라 생각했었는데 이전에 확인차 XOR 문제를 해결해보려고 하니 무한루프에 걸려버렸다. XOR 문제를 해결할 수 있었을 때와 지금의 차이는
변수간의 관계가 곱인지 합인지의 차이였다. 곱은 말 그대로 곱이고, 합은 변수 자기 자신 내에서는 정수이므로 곱의 관계를 갖을 수밖에 없지만
변수 간의 관계는 합으로 연결되어있었다. 변수 간의 관계가 곱의 관계이면 변수들로 만들어낼 수 있는 모든 경우의 수를 제어할 수 있기 때문에
학습에 따라 원하는 관계를 형성할 수 있었다. XOR과 같은 특수한 관계까지 말이다.


[ 이진 분류밖에 해결하지 못하는 문제 ][ 2023.10.05 ]
XOR 문제를 해결하면서 가중치의 범위를 -1 ~ 1로 정하였는데 이것이 문제가 되어 다중 분류의 몇몇 케이스를 해결할 수가 없었다.
이진 분류에서 최적인 구조였고, 이를 해결하기 위해 가중치의 범위를 -(출력 범위) ~ (출력 범위)로 해줄 필요가 있었다.
0을 입력했을 때 5를 반환해야 한다면 입력과 출력 레이어 만으로는 절대로 불가능하다. 0이 입력되면 활성화되는 가중치는
1개 뿐이고 가중치는 -1 ~ 1의 범위를 갖으므로 최대 1, 최소 0(출력 범위는 항상 0 이상임)만이 반환될 수밖에 없다.


[ 변수별 레이어의 가능성 ][ 2023.10.06 ]
2개 이상의 변수를 하나의 변수로 나타낸다. 그럼 입력 레이어만으로 XOR 문제를 해결할 수 있지만 각 변수의 경우의 수 끼리의 곱 만큼 가중치가필요하다.
변수의 범위, 개수가 늘어남에 따라 기하급수적으로 모델의 크기가 증가되는 문제가 있다. 이에 따라 변수별 레이어가 더 효율적일지도 모른다는 판단이 선다.
다만 지금까지 변수별 레이어 방식에서의 학습은 전부 실패했었다. 원인을 찾아야 한다.


[ 다중 분류 해결의 진척 ][ 2023.10.20 ]
시험기간이 끝났다. 이제 다시 해보려 하는데, 다중 분류 학습 알고리즘을 만드는 것이 가장 먼저 해결해야할 문제였었다. 계속 간단한 예시 문제로 연구하고 가설을 세우고 문제 사항만 계속 고려하다간
연구 및 개발이 매우 느려질 것으로 보여 현재 시도해볼 수 있는 가장 적절한 알고리즘으로 우선 프로토타입 프로그램을 만들어보려 한다. 이번에 채택한 구조 및 알고리즘은 가중치의 범위가
출력 값의 범위를 갖는다는 것이 이진 분류 학습 알고리즘과의 가장 큰 차이점이겠다.


[ 모델 기초 코드 작성 끝 ][ 2023.11.09 ]
드디어 라고 말하기엔 아직 부족하지만, 드디어 기초적인 동작 코드를 만드는데에는 성공했다. 아직 어떤 부분에서 오류가 있을지 확인하지는 않았지만 



[ 자료/지식 ]
TP : 모델의 결과 값이 참이고 정답일 때.
TN : 모델의 결과 값이 거짓이고 정답일 때.
FP : 모델의 결과 값이 참이고 오답일 때.
FN : 모델의 결과 값이 거짓이고 오답일 때.

[ 학습 알고리즘 ]
- 증가 불가 상태 : 증가 불가 상태인 경우 목표 가중치의 인덱스보다 작으면서 제일 가까운 인덱스에 해당하는 증가 가능한 가중치의 좌표를 구한다.
레이어 연산 이후 최초 증가 불가 상태일 때에만 그 좌표를 저장한다.(여러 레이어에서 증가 불가 상태가 발생할 수도 있다. 그 중 입력 레이어와 가까운 레이어의 좌표만 구한다는 뜻)
해당 좌표는 증가 불가 상태의 해결에서 사용된다.
- 증가 불가 상태 해결 : 최종 레이어인 출력 레이어에서도 증가 불가 상태인 경우 증가 불가 상태 때 구해놓은 좌표에 해당하는 가중치를 증가시킨다.
- 감소 불가 상태와 그의 하위 개념 : 학습 데이터에 대한 100% 정답률인 경우 고려하지 않는다. 출력이 항상 0과 양수일 수밖에 없다.

1. 1번 레이어 연산.
2. 1. 연산 중 활성화 목표 가중치 좌표 구하기.
  - FN인 경우 활성화된 가중치를 1 증가시키기.
    - 목표 가중치가 이미 1인 경우 증가 불가 상태.
  - FP인 경우 활성화된 가중치를 1 감소시키기.
    - 목표 가중치가 이미 -1인 경우 아무 작업 안 함.